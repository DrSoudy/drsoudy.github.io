{"version":3,"file":"static/js/18.62ea0d4f.chunk.js","mappings":"kNAqBA,EAlBe,SAAHA,GAAA,IAAMC,EAAID,EAAJC,KAAI,OACpBC,EAAAA,EAAAA,KAAA,WAASC,UAAU,mBAAkBC,UACnCC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAEH,EAAKK,UAC7BD,EAAAA,EAAAA,MAAA,KAAGF,UAAU,SAAQC,SAAA,EAACF,EAAAA,EAAAA,KAAA,KAAGK,KAAMN,EAAKO,KAAKJ,SAAEH,EAAKQ,SAAY,KAAER,EAAKS,YAE7D,ECJNC,EAAY,SAAHX,GAAA,IAAMC,EAAID,EAAJC,KAAI,OACvBI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUS,GAAG,eAC5BV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAELH,EAAKY,KAAI,SAACP,GAAM,OACfJ,EAAAA,EAAAA,KAACY,EAAM,CACLb,KAAMK,GACDA,EAAOG,OACZ,MAEA,EAYRE,EAAUI,aAAe,CACvBd,KAAM,IAGR,Q,6BCmBA,EA/CY,SAAHD,GAAA,IAAAgB,EAAAhB,EACPC,KACEgB,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SAAUC,EAAGH,EAAHG,IAAKC,EAASJ,EAATI,UAAWC,EAAOL,EAAPK,QAASC,EAAON,EAAPM,QAASC,EAAUP,EAAVO,WAAU,OAG9DlB,EAAAA,EAAAA,MAAA,WAASF,UAAU,iBAAgBC,SAAA,EACjCC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EAAIF,EAAAA,EAAAA,KAAA,KAAGK,KAAMY,EAAIf,SAAEa,IAAS,MAAIC,MAChCb,EAAAA,EAAAA,MAAA,KAAGF,UAAU,YAAWC,SAAA,CAAC,IAAEoB,IAAMJ,GAAWK,OAAO,aAAa,MAAIJ,EAAUG,IAAMH,GAASI,OAAO,aAAe,gBAEpHH,GACCpB,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CACPC,QAAS,CACPC,UAAW,CACTC,EAAG,CACDC,MAAO,CACL3B,UAAW,cAIjBC,SAEDkB,IAED,KACHC,GACCrB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SACnBmB,EAAWV,KAAI,SAACkB,GAAS,OACxB7B,EAAAA,EAAAA,KAAA,MAAAE,SAAqB2B,GAAZA,EAA2B,MAGtC,OACI,EChCNC,EAAa,SAAHhC,GAAA,IAAMC,EAAID,EAAJC,KAAI,OACxBI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUS,GAAG,gBAC5BV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAELH,EAAKY,KAAI,SAACoB,GAAG,OACZ/B,EAAAA,EAAAA,KAACgC,EAAG,CACFjC,KAAMgC,GAAI,GAAAE,OACFF,EAAIhB,KAAI,KAAAkB,OAAIF,EAAIf,UACxB,MAEA,EAeRc,EAAWjB,aAAe,CACxBd,KAAM,IAGR,Q,oBCjBA,EAhBuB,SAAHD,GAAA,IAAMoC,EAAWpC,EAAXoC,YAAaC,EAAMrC,EAANqC,OAAQC,EAAKtC,EAALsC,MAAK,OAClDpC,EAAAA,EAAAA,KAAA,UACEC,UAAS,eAAAgC,OAAiBE,EAAOC,GAAS,qBAAuB,IACjEC,KAAK,SACLC,QAAS,kBAAMJ,EAAYE,EAAM,EAAClC,SAEjCkC,GACM,ECPLG,EAAW,SAAHzC,GAA8B,IAAxBC,EAAID,EAAJC,KAAMyC,EAAU1C,EAAV0C,WAChBC,EAAgC1C,EAAhC0C,SAAUC,EAAsB3C,EAAtB2C,WAAYC,EAAU5C,EAAV4C,MAGxBC,EAAa,CACjBC,WAAYL,EACTM,QAAO,SAACC,GAAG,OAAKN,EAASO,SAASD,EAAIhC,KAAK,IAC3CJ,KAAI,SAACoC,GAAG,OAAKA,EAAIE,KAAK,IAAE,IAGvBC,GAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTP,GAAU,IACbQ,MAAM,GAADnB,OAAKoB,OAAOC,KAAKC,IAAI,IAAKD,KAAKE,IAAKd,EAAa,EAAO,IAAO,KAAI,OAG1E,OACEvC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBwD,MAAOb,EAAW1C,UAACF,EAAAA,EAAAA,KAAA,QAAAE,SAAOyC,OAC1D3C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAewD,MAAOP,KACrC/C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,CAAEwC,EAAW,YAGrD,EAcAH,EAAS1B,aAAe,CACtB2B,WAAY,IAGd,QCrCMkB,EAAS,SAAH5D,GAAgC,IAA1B6D,EAAM7D,EAAN6D,OAAQnB,EAAU1C,EAAV0C,WAClBoB,EAAiBC,OAAOC,YAAY,CAAC,CAAC,OAAO,IAAQ7B,OAAOO,EAAW7B,KAAI,SAAAoD,GAAO,MAAO,CAAPA,EAAJhD,MAAkB,EAAM,MAE5GiD,GAA8BC,EAAAA,EAAAA,UAASL,GAAeM,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAEpBI,EAAmB,SAAClC,GAExB,IAAMmC,EAAaV,OAAOW,KAAKJ,GAASK,QAAO,SAACC,EAAKC,GAAG,OAAAxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnDuB,GAAG,IAAAE,EAAAA,EAAAA,GAAA,GACLD,EAAOvC,IAAUuC,IAASP,EAAQO,IAAI,GACrC,CAAC,GAELJ,EAAWM,KAAOhB,OAAOW,KAAKJ,GAASU,MAAK,SAACH,GAAG,OAAKJ,EAAWI,EAAI,IACpEN,EAAWE,EACb,EAsCA,OACEpE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUS,GAAG,YAC5BP,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iIAILF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,SAlBlB2D,OAAOW,KAAKJ,GAASzD,KAAI,SAACgE,GAAG,OACpD3E,EAAAA,EAAAA,KAAC+E,EAAc,CACb3C,MAAOuC,EAEPxC,OAAQiC,EACRlC,YAAaoC,GAFRK,EAGL,OAeA3E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAhDxB,WAEd,IAAM8E,EAASnB,OAAOW,KAAKJ,GAASK,QAAO,SAAC1B,EAAK4B,GAAG,OAClDP,EAAQO,GAAOA,EAAM5B,CAAG,GACvB,OAaH,OAAOY,EAAOsB,MAXK,SAACC,EAAGC,GACrB,IAAIC,EAAM,EAOV,OANIF,EAAExC,WAAayC,EAAEzC,WAAY0C,GAAO,EAC/BF,EAAExC,WAAayC,EAAEzC,WAAY0C,EAAM,EACnCF,EAAEzC,SAAS,GAAK0C,EAAE1C,SAAS,GAAI2C,GAAO,EACtCF,EAAEzC,SAAS,GAAK0C,EAAE1C,SAAS,IAC3ByC,EAAEvC,MAAQwC,EAAExC,MADmByC,EAAM,EAErCF,EAAEvC,MAAQwC,EAAExC,QAAOyC,GAAO,GAC5BA,CACT,IAE+BtC,QAAO,SAACuC,GAAK,MAAiB,QAAXL,GAAoBK,EAAM5C,SAASO,SAASgC,EAAO,IAClGrE,KAAI,SAAC0E,GAAK,OACTrF,EAAAA,EAAAA,KAACuC,EAAQ,CACPC,WAAYA,EACZzC,KAAMsF,GACDA,EAAM1C,MACX,GAER,CAwBO2C,OAIT,EAcA5B,EAAO7C,aAAe,CACpB8C,OAAQ,GACRnB,WAAY,IAGd,QC3FM+C,EAAS,SAAHzF,GAAA,IAAMC,EAAID,EAAJC,KAAMyF,EAAI1F,EAAJ0F,KAAI,OAC1BrF,EAAAA,EAAAA,MAAA,MAAIF,UAAU,mBAAkBC,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,KAAGE,KAAMN,EAAKO,KAAKJ,SAAA,EACjBC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,gBAAeC,SAAA,CAAEH,EAAK0F,WAAW,QAC/CzF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaC,SAAEH,EAAK4C,YAEjC6C,IAAQxF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UAACF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaC,SAAC,gBAC9D,EAYPqF,EAAO1E,aAAe,CACpB2E,MAAM,GAGR,QCrBMF,EAAU,SAACI,GAAO,OAAKA,EAAQT,MAAK,SAACC,EAAGC,GAC5C,IAAIC,EAAM,EAGV,OAFIF,EAAEO,WAAaN,EAAEM,WAAYL,GAAO,EAC/BF,EAAEO,WAAaN,EAAEM,aAAYL,EAAM,GACrCA,CACT,IAAGzE,KAAI,SAACgF,EAAQC,GAAG,OACjB5F,EAAAA,EAAAA,KAACuF,EAAM,CACLxF,KAAM4F,EAENH,KAAMI,IAAQF,EAAQG,OAAS,GAD1BF,EAAOhD,MAEZ,GACD,EAEGmD,EAAU,SAAHhG,GAAA,IAAMC,EAAID,EAAJC,KAAI,OACrBI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUS,GAAG,aAC5BV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6BAENF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SACxBoF,EAAQvF,OAEP,EAWR+F,EAAQjF,aAAe,CACrBd,KAAM,IAGR,Q,UC5BA,EAXmB,WAAH,OACdI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUS,GAAG,gBAC5BV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAAC+F,EAAAA,GAAI,CAACC,GAAG,WAAU9F,UACjBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gDAGJ,EC8DR,EAzEgB,CACd,CACEyC,MAAO,uBACPrC,KAAM,sFACNmF,WAAY,cAEd,CACE9C,MAAO,oBACPrC,KAAM,qFACNmF,WAAY,cAEd,CACE9C,MAAO,sDACPrC,KAAM,sFACNmF,WAAY,QAEd,CACE9C,MAAO,oBACPrC,KAAM,sFACNmF,WAAY,sBAEd,CACE9C,MAAO,2CACPrC,KAAM,sFACNmF,WAAY,8CAEd,CACE9C,MAAO,oDACPrC,KAAM,qFACNmF,WAAY,8CAEd,CACE9C,MAAO,aACPrC,KAAM,qFACNmF,WAAY,qBAEd,CACE9C,MAAO,kBACPrC,KAAM,qFACNmF,WAAY,UAEd,CACE9C,MAAO,4BACPrC,KAAM,qFACNmF,WAAY,UAEd,CACE9C,MAAO,6BACPrC,KAAM,qFACNmF,WAAY,8BAEd,CACE9C,MAAO,mBACPrC,KAAM,qFACNmF,WAAY,UAEd,CACE9C,MAAO,2BACPrC,KAAM,qFACNmF,WAAY,UAEd,CACE9C,MAAO,sBACPrC,KAAM,qFACNmF,WAAY,qCAEd,CACE9C,MAAO,eACPrC,KAAM,qFACNmF,WAAY,0BCtDhB,EAfgB,CACd,CACElF,OAAQ,mBACRH,OAAQ,iCACRE,KAAM,uBACNE,KAAM,MAER,CACED,OAAQ,oBACRH,OAAQ,gBACRE,KAAM,yBACNE,KAAM,OC2HV,EAzHa,CACX,CACEO,KAAM,kCACNC,SAAU,sBACVC,IAAK,mCACLC,UAAW,aACXE,QAAQ,iRAGRC,WAAY,CACV,sEACA,uFACA,uEACA,uFAGJ,CACEN,KAAM,yDACNC,SAAU,gCACVC,IAAK,uBACLC,UAAW,aACXE,QAAQ,8HAERC,WAAY,CACV,2DACA,2DAGJ,CACEN,KAAM,wDACNC,SAAU,yCACVC,IAAK,sCACLC,UAAW,aACXC,QAAS,aACTC,QAAQ,ydAKRC,WAAY,CACV,wDACA,6EACA,wEACA,6FACA,gFAGJ,CACEN,KAAM,wCACNC,SAAU,iCACVC,IAAK,0BACLC,UAAW,aACXC,QAAS,aACTC,QAAQ,kXAIRC,WAAY,CACV,2FAGJ,CACEN,KAAM,yBACNC,SAAU,uBACVC,IAAK,+CACLC,UAAW,aACXC,QAAS,aACTC,QAAQ,sXAKRC,WAAY,CACV,gDAGJ,CACEN,KAAM,wBACNC,SAAU,qBACVC,IAAK,oCACLC,UAAW,aACXC,QAAS,aACTC,QAAQ,oUAIRC,WAAY,CACV,yCAGJ,CACEN,KAAM,eACNC,SAAU,uBACVC,IAAK,oCACLC,UAAW,aACXC,QAAS,aACTC,QAAQ,6KAERC,WAAY,CACV,iEAGJ,CACEN,KAAM,6CACNC,SAAU,uCACVE,UAAW,aACXC,QAAS,aACTF,IAAK,6CACLG,QAAQ,qUAIRC,WAAY,CACV,4BACA,uHAEA,yE,UCjIAsC,EAAS,CACb,CACEhB,MAAO,sBACPD,WAAY,EACZD,SAAU,CAAC,uBAEb,CACEE,MAAO,mBACPD,WAAY,EACZD,SAAU,CAAC,uBAEb,CACEE,MAAO,sBACPD,WAAY,EACZD,SAAU,CAAC,uBAEb,CACEE,MAAO,kBACPD,WAAY,EACZD,SAAU,CAAC,uBAEb,CACEE,MAAO,gBACPD,WAAY,EACZD,SAAU,CAAC,uBAEb,CACEE,MAAO,kBACPD,WAAY,EACZD,SAAU,CAAC,uBAEb,CACEE,MAAO,oBACPD,WAAY,EACZD,SAAU,CAAC,uBAEb,CACEE,MAAO,kBACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,mBACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,cACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,OACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,kBACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,kBACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,cACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,mBACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,WACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,gBACPD,WAAY,EACZD,SAAU,CAAC,yBAEb,CACEE,MAAO,SACPD,WAAY,EACZD,SAAU,CAAC,cAEb,CACEE,MAAO,UACPD,WAAY,EACZD,SAAU,CAAC,cAEb,CACEE,MAAO,SACPD,WAAY,EACZD,SAAU,CAAC,cAEb,CACEE,MAAO,0BACPD,WAAY,EACZD,SAAU,CAAC,wBAGb9B,KAAI,SAAC0E,GAAK,OAAAlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWkC,GAAK,IAAE5C,SAAU4C,EAAM5C,SAASwC,QAAM,IAIvDgB,EAAS,CACb,UACA,UACA,UACA,WAGIzD,GAAa0D,EAAAA,EAAAA,GACd,IAAIC,IAAIxC,EAAOyC,SAAQ,SAAAtG,GAAW,OAAAA,EAAR2C,QAAuB,MACpDwC,OAAOtE,KAAI,SAAC8B,EAAU4D,GAAK,MAAM,CACjCtF,KAAM0B,EACNQ,MAAOgD,EAAOI,GACf,IC3GKC,EAAW,CACf7F,UAAW,kBAAMT,EAAAA,EAAAA,KAACuG,EAAS,CAACxG,KAAMyG,GAAW,EAC7C1E,WAAY,kBAAM9B,EAAAA,EAAAA,KAACyG,EAAU,CAAC1G,KAAM2G,GAAQ,EAC5ChD,OAAQ,kBAAM1D,EAAAA,EAAAA,KAAC2G,EAAM,CAAChD,OAAQA,EAAQnB,WAAYA,GAAc,EAChEsD,QAAS,kBAAM9F,EAAAA,EAAAA,KAAC4G,EAAO,CAAC7G,KAAM2F,GAAW,EACzCmB,WAAY,kBAAM7G,EAAAA,EAAAA,KAAC8G,EAAU,GAAG,GA2BlC,EAxBe,WAAH,OACV9G,EAAAA,EAAAA,KAAC+G,EAAAA,EAAI,CACHpE,MAAM,SACNqE,YAAY,+HAA8H9G,UAE1IC,EAAAA,EAAAA,MAAA,WAASF,UAAU,OAAOS,GAAG,SAAQR,SAAA,EACnCF,EAAAA,EAAAA,KAAA,UAAAE,UACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAC5B2D,OAAOW,KAAK8B,GAAU3F,KAAI,SAACsG,GAAG,OAC7BjH,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,KAAGK,KAAI,IAAA4B,OAAMgF,EAAIC,eAAgBhH,SAAE+G,KAD5BA,EAEJ,WAIZpD,OAAOsD,QAAQb,GAAU3F,KAAI,SAAAb,GAAA,IAAAiE,GAAAI,EAAAA,EAAAA,GAAArE,EAAA,GAAEiB,EAAIgD,EAAA,GAAEqD,EAAOrD,EAAA,UAC3C/D,EAAAA,EAAAA,KAACoH,EAAO,GAAMrG,EAAQ,QAGrB,C","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/References.js","data/resume/courses.js","data/resume/degrees.js","data/resume/work.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport Markdown from 'markdown-to-jsx';\n\nconst Job = ({\n  data: {\n    name, position, url, startDate, endDate, summary, highlights,\n  },\n}) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={url}>{name}</a> - {position}</h4>\n      <p className=\"daterange\"> {dayjs(startDate).format('MMMM YYYY')} - {endDate ? dayjs(endDate).format('MMMM YYYY') : 'PRESENT'}</p>\n    </header>\n    {summary ? (\n      <Markdown\n        options={{\n          overrides: {\n            p: {\n              props: {\n                className: 'summary',\n              },\n            },\n          },\n        }}\n      >\n        {summary}\n      </Markdown>\n    ) : null}\n    {highlights ? (\n      <ul className=\"points\">\n        {highlights.map((highlight) => (\n          <li key={highlight}>{highlight}</li>\n        ))}\n      </ul>\n    ) : null}\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    startDate: PropTypes.string.isRequired,\n    endDate: PropTypes.string,\n    summary: PropTypes.string,\n    highlights: PropTypes.arrayOf(PropTypes.string.isRequired),\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={`${job.name}-${job.position}`}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.exact({\n    name: PropTypes.string,\n    position: PropTypes.string,\n    url: PropTypes.string,\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    highlights: PropTypes.arrayOf(PropTypes.string),\n    summary: PropTypes.string,\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, competency, title } = data;\n\n  // TODO: Consider averaging colors\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  const barStyle = {\n    ...titleStyle,\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\n  };\n\n  return (\n    <div className=\"skillbar clearfix\">\n      <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\n      <div className=\"skillbar-bar\" style={barStyle} />\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\n    </div>\n  );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst Skills = ({ skills, categories }) => {\n  const initialButtons = Object.fromEntries([['All', false]].concat(categories.map(({ name }) => [name, false])));\n\n  const [buttons, setButtons] = useState(initialButtons);\n\n  const handleChildClick = (label) => {\n    // Toggle button that was clicked. Turn all other buttons off.\n    const newButtons = Object.keys(buttons).reduce((obj, key) => ({\n      ...obj,\n      [key]: (label === key) && !buttons[key],\n    }), {});\n    // Turn on 'All' button if other buttons are off\n    newButtons.All = !Object.keys(buttons).some((key) => newButtons[key]);\n    setButtons(newButtons);\n  };\n\n  const getRows = () => {\n    // search for true active categories\n    const actCat = Object.keys(buttons).reduce((cat, key) => (\n      buttons[key] ? key : cat\n    ), 'All');\n\n    const comparator = (a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    };\n\n    return skills.sort(comparator).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <SkillBar\n          categories={categories}\n          data={skill}\n          key={skill.title}\n        />\n      ));\n  };\n\n  const getButtons = () => Object.keys(buttons).map((key) => (\n    <CategoryButton\n      label={key}\n      key={key}\n      active={buttons}\n      handleClick={handleChildClick}\n    />\n  ));\n\n  return (\n    <div className=\"skills\">\n      <div className=\"link-to\" id=\"skills\" />\n      <div className=\"title\">\n        <h3>Skills</h3>\n        <p>Note: I think these sections are silly, but everyone seems to have one.\n          Here is a *mostly* honest overview of my skills.\n        </p>\n      </div>\n      <div className=\"skill-button-container\">\n        {getButtons()}\n      </div>\n      <div className=\"skill-row-container\">\n        {getRows()}\n      </div>\n    </div>\n  );\n};\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.university}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    university: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Selected Certificates</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const courses = [\n  {\n    title: 'Basic Selling Skills',\n    link: ' https://drive.google.com/file/d/1f7ouWrz42U7fl-5CrjvKbaNM8twNvUYr/view?usp=sharing',\n    university: 'Tag Pharma',\n  },\n  {\n    title: 'Human Development',\n    link: 'https://drive.google.com/file/d/1MMax8A8Gvx0MdLUtr_jV7Z4_s-gMhjLe/view?usp=sharing',\n    university: 'Abninafsak',\n  },\n  {\n    title: 'Over The Counter drugs used in most common diseases',\n    link: ' https://drive.google.com/file/d/1fYYzWnrZFwROLSPxgygLoLUZetLg3EI_/view?usp=sharing',\n    university: 'AADP',\n  },\n  {\n    title: 'Medical Promotion',\n    link: ' https://drive.google.com/file/d/1ypfOgbnAbEF0WehRZ9_oF38TTnzq0aKF/view?usp=sharing',\n    university: 'Eva Pharma Company',\n  },\n  {\n    title: 'Advanced presentation and selling skills',\n    link: ' https://drive.google.com/file/d/1jZF8NbgSYsRvdRt--QmtXc3BEe8tVWtB/view?usp=sharing',\n    university: 'Doctorz Company for Perfumes and Cosmetics',\n  },\n  {\n    title: 'Practical Training in Market & Achieve some sales',\n    link: 'https://drive.google.com/file/d/1P-m0zGR7UzSHkPUGfy30qylo4SiRTsQI/view?usp=sharing',\n    university: 'Doctorz Company for Perfumes and Cosmetics',\n  },\n  {\n    title: 'CV Writing',\n    link: 'https://drive.google.com/file/d/1KiHUPY4bC_Fo-bPwFH-PwWw81dgYY1be/view?usp=sharing',\n    university: 'Pharos University',\n  },\n  {\n    title: 'Time Management',\n    link: 'https://drive.google.com/file/d/1xz2zj6B88q3VRbqlCTbPGR_RpQ37TMGt/view?usp=sharing',\n    university: 'Pharos',\n  },\n  {\n    title: 'Entrepreneurship Workshop',\n    link: 'https://drive.google.com/file/d/1SQZyC6mR_uETgzREQqu47nkJq6kyNnkY/view?usp=sharing',\n    university: 'Pharos',\n  },\n  {\n    title: 'Clinical Pharmacy Training',\n    link: 'https://drive.google.com/file/d/1ItoMiZJGu262kTztTnEmHZjFnbmPkInx/view?usp=sharing',\n    university: 'Alex. Armed Force Hospital',\n  },\n  {\n    title: 'Sales internship',\n    link: 'https://drive.google.com/file/d/1_K6gpUA67rYTosvv0lvPadb5BAqJCQiw/view?usp=sharing',\n    university: 'Nestle',\n  },\n  {\n    title: 'Medical Sales Internship',\n    link: 'https://drive.google.com/file/d/1uP101IerLCf7jqrMqUJled1Mzm5GQbYm/view?usp=sharing',\n    university: 'Sanofi',\n  },\n  {\n    title: 'Hepatitis C Testing',\n    link: 'https://drive.google.com/file/d/1NH5pRgUvHwgdokUIEn5awN-er1XZ7UXY/view?usp=sharing',\n    university: 'Ministry of Health and Population',\n  },\n  {\n    title: 'Careery 2022',\n    link: 'https://drive.google.com/file/d/1PLJqs4N18ELdU5sOPK5pHeoHSwXw1dU3/view?usp=sharing',\n    university: 'Akhnaton - Eva Pharma',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'Tanta University',\n    degree: 'M.S. Pharmaceutical Management',\n    link: 'https://tanta.edu.eg',\n    year: 2024,\n  },\n  {\n    school: 'Pharos University',\n    degree: 'B.S. Pharmacy',\n    link: 'https://www.pua.edu.eg',\n    year: 2019,\n  },\n];\n\nexport default degrees;\n","/**\n * @typedef {Object} Position\n * Conforms to https://jsonresume.org/schema/\n *\n * @property {string} name - Name of the company\n * @property {string} position - Position title\n * @property {string} url - Company website\n * @property {string} startDate - Start date of the position in YYYY-MM-DD format\n * @property {string|undefined} endDate - End date of the position in YYYY-MM-DD format.\n * If undefined, the position is still active.\n * @property {string|undefined} summary - html/markdown summary of the position\n * @property {string[]} highlights - plain text highlights of the position (bulleted list)\n */\nconst work = [\n  {\n    name: 'Alexandria University Hospitals',\n    position: 'Hospital Pharmacist',\n    url: 'https://auhospitals.alexu.edu.eg',\n    startDate: '2023-03-01',\n    summary: `Experienced pharmacist skilled in dispensing medications, monitoring therapy, \n    and providing drug information. Proficient in clinical trials and research for innovative \n    treatments. Expertise in patient care areas such as nutrition support and pain management.`,\n    highlights: [\n      'Dispense medications to patients, both in-house and upon discharge.',\n      'Monitor patients\\' medication therapy to identify and resolve any potential problems.',\n      'Provide drug information to other healthcare providers and patients.',\n      'Involved in other areas, such as nutrition support, and antimicrobial stewardship.',\n    ],\n  },\n  {\n    name: 'Institute of Training and Occupational Learning (ITOL)',\n    position: 'Project Executive (Part-Time)',\n    url: 'https://www.itol.org',\n    startDate: '2023-01-01',\n    summary: `Institute of Training and Occupational Learning. Home of training, learning, and \n    continuing professional development.`,\n    highlights: [\n      'Establish excellent relationships with customers in B2B.',\n      'Perform accreditation processes for training programs.',\n    ],\n  },\n  {\n    name: 'Soudy Store for perfumes and cosmetics (Own business)',\n    position: 'Business Owner, seller, and formulator',\n    url: 'https://www.facebook.com/SoudyStore',\n    startDate: '2019-09-01',\n    endDate: '2023-01-01',\n    summary: `Soudy Store is a small store for agency and distribution of perfumes and cosmetics. \n    As business owner, I had to develop a business plan, manage staff, market the business online \n    and offline, provide customer service, and comply with all applicable regulations. In addition, \n    I used my pharmaceutical experience to formulate some fragrances and cosmeceutical formulations. \n    As salesperson, I had to promote and make deals with B2B and B2C customers.`,\n    highlights: [\n      'Built my brand called سعودي.',\n      'Covered all costs of my store and succeeded in gaining revenue and profit.',\n      'Established a database of more than 1000 customers in 7 governorates.',\n      'Formulated some fragrance products like eau de cologne, eau de toilet, and eau de perfume.',\n      'Made more than 300,000 L.E. sales in one product throughout the last years.',\n    ],\n  },\n  {\n    name: 'National Food Safety Authority (NFSA)',\n    position: 'Special Food Safety Inspector ',\n    url: 'https://reg.nfsa.gov.eg',\n    startDate: '2021-08-01',\n    endDate: '2023-02-01',\n    summary: `A special food safety inspector with pharmaceutical background is a public health \n    professional who is responsible for ensuring that special food is safe to deliver and eat. \n    In addition, inspection and sampling of special foods (Food supplements, infant formulas, etc.) \n    and review and draft regulatory documents required for importing these products.`,\n    highlights: [\n      'Established a sub-unit cooperatively resulting in reducing time of inspection by half.',\n    ],\n  },\n  {\n    name: 'Asmaa Abo Hay Pharmacy',\n    position: 'Community Pharmacist',\n    url: 'https://www.facebook.com/asmaaabohaypharmacy',\n    startDate: '2021-05-01',\n    endDate: '2021-07-01',\n    summary: `Asmaa Abo Hay is a pharmacy in Damanhour city. \n    Being a community pharmacy made me play an important role in providing convenient and \n    accessible healthcare services to the public. As known, community pharmacists are often the \n    first point of contact for people with health concerns, and they can provide advice and support \n    on a wide range of topics.`,\n    highlights: [\n      'Managed the pharmacy during my night shift.',\n    ],\n  },\n  {\n    name: 'NIG Nutritional Egypt',\n    position: 'Product Specialist',\n    url: 'https://www.nignutritionals.co.nz',\n    startDate: '2021-02-01',\n    endDate: '2021-04-01',\n    summary: `NIG is a multinational company specialized in prophylactic nutrition. \n    Headquarters in Newzeland. I had to provide technical and clinical information about bioactive \n    colostrum to healthcare professionals, manage sales relationships with healthcare professionals \n    and attend medical conferences and events.`,\n    highlights: [\n      'Achieved sales from the first month.',\n    ],\n  },\n  {\n    name: 'Evy Pharmacy',\n    position: 'Community Pharmacist',\n    url: 'https://evypharmacy.business.site',\n    startDate: '2020-08-01',\n    endDate: '2021-01-01',\n    summary: `Working in a community pharmacy allowed me to assume a significant responsibility \n    in offering convenient and easily accessible healthcare services to the community.`,\n    highlights: [\n      'Compound and dispense medication as prescribed by physician.',\n    ],\n  },\n  {\n    name: 'Doctorz Company for Perfumes and Cosmetics',\n    position: 'Promotional and Sales Representative',\n    startDate: '2019-07-01',\n    endDate: '2020-08-01',\n    url: 'https://www.facebook.com/doctorzcoperfumes',\n    summary: `Doctorz Company for Perfumes and Cosmetics Alexandria and Delta, Egypt\n    A company specialized in perfumes, cosmetics, medical plants and chemicals. I established this \n    new brand outside Alexandria governorate and fulfilled many tasks in fields of sales, marketing, \n    customer services and after sales service.`,\n    highlights: [\n      'Best achiever in Q4 2019.',\n      'Built Doctorz business outside Alexandria from nothing in 2016 to +350,000 L.E. '\n      + 'in total sales in the last 9 months.',\n      'Q1,2 2020 total sales were 57.3% more than the same period in 2019.',\n    ],\n  },\n];\n\nexport default work;\n","const skills = [\n  {\n    title: 'After sales service',\n    competency: 4,\n    category: ['Industry Knowledge'],\n  },\n  {\n    title: 'Drug Information',\n    competency: 5,\n    category: ['Industry Knowledge'],\n  },\n  {\n    title: 'Product Specialists',\n    competency: 2,\n    category: ['Industry Knowledge'],\n  },\n  {\n    title: 'Market Research',\n    competency: 3,\n    category: ['Industry Knowledge'],\n  },\n  {\n    title: 'B2B Marketing',\n    competency: 2,\n    category: ['Industry Knowledge'],\n  },\n  {\n    title: 'Pharmaceuticals',\n    competency: 4,\n    category: ['Industry Knowledge'],\n  },\n  {\n    title: 'Visual Inspection',\n    competency: 2,\n    category: ['Industry Knowledge'],\n  },\n  {\n    title: 'Microsoft Excel',\n    competency: 2,\n    category: ['Tools & Technologies'],\n  },\n  {\n    title: 'Microsoft Office',\n    competency: 4,\n    category: ['Tools & Technologies'],\n  },\n  {\n    title: 'Power Point',\n    competency: 3,\n    category: ['Tools & Technologies'],\n  },\n  {\n    title: 'Odoo',\n    competency: 3,\n    category: ['Tools & Technologies'],\n  },\n  {\n    title: 'Team Leadership',\n    competency: 2,\n    category: ['Interpersonal Skills'],\n  },\n  {\n    title: 'Problem Solving',\n    competency: 2,\n    category: ['Interpersonal Skills'],\n  },\n  {\n    title: 'Negotiation',\n    competency: 3,\n    category: ['Interpersonal Skills'],\n  },\n  {\n    title: 'Active Listening',\n    competency: 3,\n    category: ['Interpersonal Skills'],\n  },\n  {\n    title: 'Teamwork',\n    competency: 3,\n    category: ['Interpersonal Skills'],\n  },\n  {\n    title: 'Communication',\n    competency: 2,\n    category: ['Interpersonal Skills'],\n  },\n  {\n    title: 'Arabic',\n    competency: 5,\n    category: ['Languages'],\n  },\n  {\n    title: 'English',\n    competency: 3,\n    category: ['Languages'],\n  },\n  {\n    title: 'French',\n    competency: 1,\n    category: ['Languages'],\n  },\n  {\n    title: 'Artificial Intelligence',\n    competency: 2,\n    category: ['Industry Knowledge'],\n  },\n\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of RGB Hex colors that I like. The length should be === to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#00111c',\n  '#001523',\n  '#001a2d',\n  '#001f38',\n];\n\nconst categories = [\n  ...new Set(skills.flatMap(({ category }) => category)),\n].sort().map((category, index) => ({\n  name: category,\n  color: colors[index],\n}));\n\nexport { categories, skills };\n","import React from 'react';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport work from '../data/resume/work';\nimport { skills, categories } from '../data/resume/skills';\n\n// NOTE: sections are displayed in order defined.\nconst sections = {\n  Education: () => <Education data={degrees} />,\n  Experience: () => <Experience data={work} />,\n  Skills: () => <Skills skills={skills} categories={categories} />,\n  Courses: () => <Courses data={courses} />,\n  References: () => <References />,\n};\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Mohamed Elseoudy's Resume. Smile Identity, Arthena, Matroid, YC, Skeptical Investments, Stanford ICME, Planet, and Facebook.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2>Resumé</h2>\n          <div className=\"link-container\">\n            {Object.keys(sections).map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n        </div>\n      </header>\n      {Object.entries(sections).map(([name, Section]) => (\n        <Section key={name} />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["_ref","data","_jsx","className","children","_jsxs","degree","href","link","school","year","Education","id","map","Degree","defaultProps","_ref$data","name","position","url","startDate","endDate","summary","highlights","dayjs","format","Markdown","options","overrides","p","props","highlight","Experience","job","Job","concat","handleClick","active","label","type","onClick","SkillBar","categories","category","competency","title","titleStyle","background","filter","cat","includes","color","barStyle","_objectSpread","width","String","Math","min","max","style","Skills","skills","initialButtons","Object","fromEntries","_ref2","_useState","useState","_useState2","_slicedToArray","buttons","setButtons","handleChildClick","newButtons","keys","reduce","obj","key","_defineProperty","All","some","CategoryButton","actCat","sort","a","b","ret","skill","getRows","Course","last","university","courses","course","idx","length","Courses","Link","to","colors","_toConsumableArray","Set","flatMap","index","sections","_Education","degrees","_Experience","work","_Skills","_Courses","References","_References","Main","description","sec","toLowerCase","entries","Section"],"sourceRoot":""}